@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
        <li class="nav-item" style="margin: 0px;">
            <a id="manage" class="nav-link text-dark" style="margin-top: 0px;">Hello @UserManager.GetUserName(User)!</a>
    </li>
        <li class="nav-item" style="margin: 0px;">
        <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button id="logout" type="submit" class="nav-link btn btn-link text-dark" style="font-size: 160%;">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item" style="margin-top: 0; margin-bottom: 0;">
            <a class="nav-link text-dark" id="register" asp-area="Identity" asp-page="/Account/Register" style="margin-top: 0;">Register</a>
    </li>
    <li class="nav-item" style="margin-top: 0; margin-bottom: 0;">
            <a class="nav-link text-dark" id="login" asp-area="Identity" asp-page="/Account/Login" style="margin-top: 0;">Login</a>
    </li>
}
</ul>
